/*
 * Grid System
 * ---------------
 */


// Container
// ---------------------------------- //
.ea-l-container {
    @include ea-l-container;
}

// Row
// ---------------------------------- //
.ea-l-row {
    @include ea-l-row;
}

// Column
// ---------------------------------- //
.ea-l-column {
    @include ea-l-column;
}




// Grid Column Spans
// ---------------------------------- //

@for $i from 1 through $columns {

    .ea-l-span-#{$i} {
        grid-column-end: span ea-span( $i );
        grid-template-columns: repeat($i, 1fr);
        grid-column-gap: $sm-gutter;
        @include media($gutter-breakpoint){
          grid-column-gap: $gutter;
        }

    }

}

@for $i from 1 through $columns {

    @include media($sm) {
        .ea-l-span-#{$i}-sm {

            grid-column-end: span ea-span( $i );
            grid-template-columns: repeat($i, 1fr);
            grid-column-gap: $sm-gutter;
            @include media($gutter-breakpoint){
              grid-column-gap: $gutter;
            }

        }
    }

}

@for $i from 1 through $columns {

    @include media($md) {
        .ea-l-span-#{$i}-md {

            grid-column-end: span ea-span( $i );
            grid-template-columns: repeat($i, 1fr);
            grid-column-gap: $sm-gutter;
            @include media($gutter-breakpoint){
              grid-column-gap: $gutter;
            }

        }
    }

}

@for $i from 1 through $columns {

    @include media($lg) {
        .ea-l-span-#{$i}-lg {

            grid-column-end: span ea-span( $i );
            grid-template-columns: repeat($i, 1fr);
            grid-column-gap: $sm-gutter;
            @include media($gutter-breakpoint){
              grid-column-gap: $gutter;
            }

        }
    }

}

@for $i from 1 through $columns {

    @include media($xl) {
        .ea-l-span-#{$i}-xl {

            grid-column-end: span ea-span( $i );
            grid-template-columns: repeat($i, 1fr);
            grid-column-gap: $sm-gutter;
            @include media($gutter-breakpoint){
              grid-column-gap: $gutter;
            }

        }
    }

}



// Grid Column Offsets
// ---------------------------------- //
@for $i from 1 through $columns {
    .ea-l-offset-#{$i} {
        grid-column-start: #{$i + 1};
    }
}
@for $i from 1 through $columns {
    @include media($sm) {
        .ea-l-offset-#{$i}-sm {
            grid-column-start: #{$i + 1};
        }
    }
}
@for $i from 1 through $columns {
    @include media($md) {
        .ea-l-offset-#{$i}-md {
            grid-column-start: #{$i + 1};
        }
    }
}
@for $i from 1 through $columns {
    @include media($lg) {
        .ea-l-offset-#{$i}-lg {
            grid-column-start: #{$i + 1};
        }
    }
}
@for $i from 1 through $columns {
    @include media($xl) {
        .ea-l-offset-#{$i}-xl {
            grid-column-start: #{$i + 1};
        }
    }
}




// Visual Grid Columns
// ---------------------------------- //
.ea-l-visual-grid {
    position: relative;

    &:before {
        content: "";
        display: block;
        position: absolute;
        top: 0;
        bottom: 0;
        z-index: 999;
        pointer-events: none;

        background: repeating-linear-gradient(to right, transparent, transparent $sm-gutter, rgba(18, 109, 181, 0.1) $sm-gutter, rgba(18, 109, 181, 0.1) #{ 1/$columns * 100% });
        left: $sm-gutter*2;
        right: $gutter;
        @include media($gutter-breakpoint){
          background: repeating-linear-gradient(to right, transparent, transparent $gutter, rgba(18, 109, 181, 0.1) $gutter, rgba(18, 109, 181, 0.1) #{ 1/$columns * 100% });
          left: 0;
          right: $gutter;
        }
    }
}
